model {
  
  # ----- Likelihood, non-informative -----
  for (i in 1:N) {
    # Right-censoring via interval indicator
    is_cens[i] ~ dinterval(T[i], C[i])
    
    # Outcome model: Weibull distribution, dweib(shape = k, rate = b[i])
    T[i] ~ dweib(k, b[i])
    
    # AFT linear predictor with latent U 
    # mu[i] = eta0 + eta_x * X[i] + eta_a * A[i] + eta_u * U[i]
    # log b[i] = -k * mu[i]
    # rate parameter b[i] = exp(-k * mu[i])
    
    mu[i] <- eta0 + eta_x1*X1[i] + eta_x2*X2[i] + eta_a*A[i] + eta_u*U[i]
    log_b[i] <- -k * mu[i]
    b[i] <- exp(log_b[i])
    
    # ---- Latent U model ----
    #model U as binary
    U[i] ~ dbern(pU[i])
    logit(pU[i]) <- gamma0 + gamma1*X1[i] + gamma2*X2[i] 
    

    
    # ---- Treatment assignment model A|X,U ----
    A[i] ~ dbern(pA[i])
    logit(pA[i]) <- alpha0 + alpha1*X1[i] + alpha2*X2[i] + alpha3*U[i] 
  }
  
  # ----- Priors -----
  #outcome parameters
  eta0 ~ dnorm(0, 1)
  eta_x1 ~ dnorm(0, 1)
  eta_x2 ~ dnorm(0, 1)
  eta_a ~ dnorm(0, 1)
  eta_u ~ dnorm(0, 1)      # sensitivity effect of U on outcome
  
  #U parameters
  #gamma0 ~ dnorm(0, 0.16)
  #gamma1 ~ dnorm(0, 0.16)
  #gamma2 ~ dnorm(0, 0.16)
  pU ~ dunif(0.1, 0.9)
  
  #Treatment parameters
  alpha0 ~ dnorm(0, 0.16)
  alpha1 ~ dnorm(0, 0.16)
  alpha2 ~ dnorm(0, 0.16)
  alpha3 ~ dnorm(0, 0.44)    # sensitivity effect of U on treatment
  
  logk ~ dnorm(log(2), 4)
  k <- exp(logk)

}
